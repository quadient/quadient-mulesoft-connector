{
  "openapi": "3.0.1",
  "info": {
    "title": "Generate On Demand REST API",
    "description": "For more details and full context regarding Quadient REST API services, consult documentation at: https://www.quadient.com/documentation.",
    "version": "24.6.59.1"
  },
  "paths": {
    "/production/v6/createChangeSet": {
      "post": {
        "tags": [
          "Change Sets"
        ],
        "description": "Creates a new change set.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - Write. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChangeSetV6Request"
              },
              "examples": {
                "Creates a change set containing pipelines.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Pipelines/PipelineName1"
                      },
                      {
                        "path": "Pipelines/PipelineName2"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_pipelines."
                },
                "Creates a change set containing a pipeline with dependencies.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Pipelines/PipelineName1",
                        "withDependencies": true
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_a_pipeline_with_dependencies."
                },
                "Creates a change set containing all pipelines.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Pipelines/"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_all_pipelines."
                },
                "Creates a change set containing all connectors.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Connectors/"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_all_connectors."
                },
                "Creates a change set containing all custom modules.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Custom Modules/"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_all_custom_modules."
                },
                "Creates a change set containing a connector in a folder.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Connectors/folder1/folder2/ConnectorName2"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_a_connector_in_a_folder."
                },
                "Creates a change set containing a folder with connectors and their dependencies.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "Connectors/folder1/folder2/",
                        "withDependencies": true
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_a_folder_with_connectors_and_their_dependencies."
                },
                "Creates a change set containing files from ICM with dependencies.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "icm://Custom Solutions/Templates/My print template.wfd",
                        "withDependencies": true
                      },
                      {
                        "path": "icm://Interactive/StandardPackage/Resources/Images/My image.png"
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_files_from_ICM_with_dependencies."
                },
                "Creates a change set containing an ICM folder with dependencies.": {
                  "value": {
                    "name": "Change set name",
                    "description": "Change set description",
                    "resources": [
                      {
                        "path": "icm://Custom Solutions/Templates/",
                        "withDependencies": true
                      }
                    ]
                  },
                  "x-internal-id": "createChangeSet-Creates_a_change_set_containing_an_ICM_folder_with_dependencies."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChangeSetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/appHealth": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Checks the health of the application, i.e. whether it is running or not.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: On-demand processing, Content management - View, Job management, Batch processing or Administration. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAppHealth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the health status of an application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProdaasAppHealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/batchLog": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Retrieves logs of a Batch job saved in the specified time period. The maximum number of requests per second is 20 and up to 5 requests can run concurrently.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBatchLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "Contains raw binary data which corresponds to requested object.",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/dashboardStatisticsRawData": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Downloads raw statistics data about batch job processing. Limited to one request per second.\n The report can also be downloaded as a CSV file in the Generate GUI (Operator Dashboard).",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Job management. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryDashboardStatisticsRawData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "Contains raw binary data which corresponds to requested object.",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/jobLogExport": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Returns all job logs starting from a given timestamps up to a specified limit.\n Note that the request cannot be processed concurrently, i.e. you cannot send further requests until the current one returns a response.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Job management. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryJobLogExport"
              },
              "examples": {
                "Exports job logs for the Generate Batch application (from 20.05.2024).": {
                  "value": {
                    "from": 1716182444959000000,
                    "lineLimit": 5000,
                    "application": "BATCH"
                  },
                  "x-internal-id": "jobLogExport-Exports_job_logs_for_the_Generate_Batch_application_from_20.05.2024_."
                },
                "Exports job logs for the Generate On-demand application (from 20.05.2024).": {
                  "value": {
                    "from": 1716182444959000000,
                    "lineLimit": 5000,
                    "application": "ONDEMAND"
                  },
                  "x-internal-id": "jobLogExport-Exports_job_logs_for_the_Generate_On-demand_application_from_20.05.2024_."
                },
                "Exports job logs for the Channel Orchestration application (from 20.05.2024).": {
                  "value": {
                    "from": 1716182444959000000,
                    "lineLimit": 5000,
                    "application": "ORCHESTRATION"
                  },
                  "x-internal-id": "jobLogExport-Exports_job_logs_for_the_Channel_Orchestration_application_from_20.05.2024_."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contains raw binary data which corresponds to requested object.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "Contains raw binary data which corresponds to requested object.",
                  "format": "binary"
                },
                "example": "timestamp;logdata\ntimestamp;logdata\n..."
              }
            }
          }
        }
      }
    },
    "/production/v6/onDemandLog": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Retrieves logs of a On Demand job saved in the specified time period. The maximum number of requests per second is 20 and up to 5 requests can run concurrently.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryOnDemandLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "Contains raw binary data which corresponds to requested object.",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/productionAuditing": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Returns production auditing data based on the specified cursor parameter.\n To use this API request, production auditing must be enabled in the Production Auditing section and there must be some logged data available.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Production auditing. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryProductionAuditingFluentApi"
              },
              "examples": {
                "Retrieves production auditing data.": {
                  "value": {
                    "cursor": "2022-12-31",
                    "maxCount": 5000
                  },
                  "x-internal-id": "productionAuditing-Retrieves_production_auditing_data."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAuditingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/scenarioLog": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "Retrieves logs of scenario jobs specified via the available parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryScenarioLogV6"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "Contains raw binary data which corresponds to requested object.",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/onDemand": {
      "post": {
        "tags": [
          "On-Demand Generation"
        ],
        "description": "Starts and processes an on-demand job using a defined processing pipeline.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: On-demand processing. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnDemandPipelineRequest"
              },
              "examples": {
                "Starts and processes an on-demand job with variables.": {
                  "value": {
                    "pipelineName": "PipelineName",
                    "variables": [
                      {
                        "codeName": "name",
                        "value": "John Smith"
                      },
                      {
                        "codeName": "email",
                        "value": "john.smith@gfbank.com"
                      }
                    ]
                  },
                  "x-internal-id": "onDemand-Starts_and_processes_an_on-demand_job_with_variables."
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "json": {
                    "type": "string",
                    "description": "File containing JSON parameters in a format identical to the application/json version of the request. The maximum size of this file is 100 kB.",
                    "format": "binary"
                  },
                  "dataFile1...dataFileX": {
                    "type": "string",
                    "description": "Individual data files containing input data. By default, the files are saved to an internal location and are automatically deleted once used.\n\nThe Content-Disposition header must contain the filename parameter as this is the value used to reference the files (the value of the name parameter is not used in further processing).\nTo reference a data file, use the request:// connector in the following format: request://\\<filename>, e.g. request://Customers.json.\nNote that using request:// without specifying the file name references the first uploaded data file (i.e. this is useful when uploading only one file).\n\nYou can attach maximally 100 data files. The maximum size of each file is 50 MB and the maximum size of all data files is 100 MB.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorOnDemandPipelinePublicResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnDemandPipelinePublicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/onDemandCustomData/{PipelineName}": {
      "post": {
        "tags": [
          "On-Demand Generation"
        ],
        "description": "Starts and processes an on-demand job (using a defined processing pipeline) and uploads custom data to an internal location (these data files are later automatically deleted).",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authenticates your request. You can use:\n * Bearer API key. Generate its value in Settings | Administration | API Keys and place it in the header after the Bearer keyword, e.g. Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu\n * Basic authentication. Create a base64-encoded string from a username (any populated string) and a password (API key) in this format: username:password. Place it in the header after the Basic keyword, e.g. Basic YWRtaW46dGVzdFBhc3N3b3Jk.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "header",
            "description": "Gives a custom name to the data file.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "header",
            "description": "Data file is saved to the specified folder in the working folder | input directory.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useDraftPipeline",
            "in": "header",
            "description": "If true, the job will be run using a draft version of the processing pipeline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useDraftResources",
            "in": "header",
            "description": "If true, the job will be run using a draft version of the relevant resources (scripts, connectors).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variables",
            "in": "header",
            "description": "List of pipeline variables used for the job. Each variable should be a separate header with the name prefixed by \"c-variable-\", e.g. \"c-variable-subject\" with the value of \"Invitation to Apply for a Credit Card\" will create a variable \"subject\" with this value. The maximum number of these variables is 50 or as allowed by the maximum size of headers.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PipelineName",
            "in": "path",
            "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\".",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorOnDemandPipelinePublicResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnDemandPipelinePublicResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "PipelineName",
          "in": "path",
          "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\".",
          "required": true,
          "schema": {
            "minLength": 1,
            "type": "string"
          }
        }
      ]
    },
    "/production/v6/onDemandDocument": {
      "post": {
        "tags": [
          "On-Demand Generation"
        ],
        "description": "Generates customer communications via an ad hoc processing pipeline.\n This API can be used to generate customer communications (documents) and send them via various channels. The generated documents can be returned in the response, stored in an external storage, sent via email as attachments.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: On-demand processing. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnDemandPipelineAdHocV6Request"
              },
              "examples": {
                "Generates a PDF file (one default template data input).": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "response://",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Generates_a_PDF_file_one_default_template_data_input_."
                },
                "Generates a PDF file using a precompiled TNO file as the template.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "pathToTnoFile",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "response://"
                        }
                      }
                    ]
                  },
                  "x-internal-id": "onDemandDocument-Generates_a_PDF_file_using_a_precompiled_TNO_file_as_the_template."
                },
                "Generates a PDF file (one default template data input, no output module).": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsuranceV2.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputPath": "response://",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Generates_a_PDF_file_one_default_template_data_input_no_output_module_."
                },
                "Generates a PDF file with a combination of a static and generated attachment.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print Attachment",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "blob://Terms.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "share://results/%jobid/document.pdf",
                          "attachments": [
                            {
                              "attachmentName": "image.png",
                              "path": "icm://Sample Solutions/Assets/welcome.png"
                            },
                            {
                              "attachmentName": "Terms.pdf",
                              "path": "blob://Terms.pdf"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Generates_a_PDF_file_with_a_combination_of_a_static_and_generated_attachment."
                },
                "Generates an AFP file (one default template data input).": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "AFP",
                          "outputModule": "Print",
                          "outputPath": "response://",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Generates_an_AFP_file_one_default_template_data_input_."
                },
                "Generates JSON data.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "pathToTemplate",
                          "channel": "Print",
                          "outputType": "JSON",
                          "outputModule": "DataOutput1",
                          "outputPath": "response://",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Generates_JSON_data."
                },
                "Sends an email.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "Email",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email."
                },
                "Sends an email marked with a custom correlation identifier.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "Email",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ],
                          "correlationId": "b5521053-93c8-42ec-afb4-075b9fe09fde"
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_marked_with_a_custom_correlation_identifier."
                },
                "Sends an email and a notification.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "DAS",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "email": "john.smith@gfbank.com"
                        }
                      },
                      "channelsData": {
                        "PushNotification": {
                          "title": "Welcome Kit",
                          "message": "Your welcome kit is available"
                        },
                        "Email": {
                          "subject": "Your welcome kit is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_and_a_notification."
                },
                "Sends a notification and creates a document in a DAS application.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/WelcomeKit.wfd",
                          "channel": "DigitalAdvantageContent",
                          "outputModule": "DAS",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "plan": {
                          "years": 30,
                          "coverage": 250000,
                          "monthlyPayment": 20,
                          "expirationDate": "2025-09-29T22:00"
                        }
                      },
                      "channelsData": {
                        "DigitalAdvantageContent": {
                          "name": "Welcome Kit",
                          "rights": "Delete",
                          "command": "C"
                        },
                        "PushNotification": {
                          "title": "Welcome Kit",
                          "message": "Your welcome kit is available"
                        },
                        "Email": {
                          "subject": "Your welcome kit is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_a_notification_and_creates_a_document_in_a_DAS_application."
                },
                "Sends an email, a notification, and creates a document in a DAS application.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/WelcomeKit.wfd",
                          "channel": "DigitalAdvantageContent",
                          "outputModule": "DAS",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "plan": {
                          "years": 30,
                          "coverage": 250000,
                          "monthlyPayment": 20,
                          "expirationDate": "2025-09-29T22:00"
                        }
                      },
                      "channelsData": {
                        "DigitalAdvantageContent": {
                          "name": "Welcome Kit",
                          "rights": "Delete",
                          "command": "C"
                        },
                        "PushNotification": {
                          "title": "Welcome Kit",
                          "message": "Your welcome kit is available"
                        },
                        "Email": {
                          "subject": "Your welcome kit is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_a_notification_and_creates_a_document_in_a_DAS_application."
                },
                "Sends an email with two defined attachments stored in the cloud-based ICM.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "Email",
                          "attachments": [
                            {
                              "attachmentName": "richardhenley.png",
                              "path": "icm://Sample Solutions/Assets/richardhenley.png"
                            },
                            {
                              "attachmentName": "ss6_logo.png",
                              "path": "icm://Sample Solutions/Assets/ss6_logo.png"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_with_two_defined_attachments_stored_in_the_cloud-based_ICM."
                },
                "Sends an email with a static attachment that is renamed during the generation process.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "Email",
                          "attachments": [
                            {
                              "attachmentName": "vital_insurance.png",
                              "path": "icm://Sample Solutions/Assets/ss6_logo.png"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_with_a_static_attachment_that_is_renamed_during_the_generation_process."
                },
                "Sends an email with two generated attachments.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print first Attachment",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "blob://Terms.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Print second Attachment",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "blob://Conditions.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputModule": "Email",
                          "attachments": [
                            {
                              "attachmentName": "Terms.pdf",
                              "path": "blob://Terms.pdf"
                            },
                            {
                              "attachmentName": "Conditions.pdf",
                              "path": "blob://Conditions.pdf"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_with_two_generated_attachments."
                },
                "Sends an email with a combination of a static and generated attachment.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print Attachment",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "blob://Terms and Conditions.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Email",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Email",
                          "outputType": "PDF",
                          "outputModule": "Email",
                          "outputPath": "share://results/%jobid/document.pdf",
                          "attachments": [
                            {
                              "attachmentName": "image.png",
                              "path": "icm://Sample Solutions/Assets/ss6_logo.png"
                            },
                            {
                              "attachmentName": "Terms and Conditions.pdf",
                              "path": "blob://Terms and Conditions.pdf"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      },
                      "channelsData": {
                        "Email": {
                          "subject": "Your insurance claim summary is available",
                          "fromMail": "peter.Taylor@gfbank.com"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_email_with_a_combination_of_a_static_and_generated_attachment."
                },
                "Sends an SMS message.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "SMS",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "SMS",
                          "outputModule": "SMS",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "contactInfo": {
                          "phone": "+420123456789"
                        }
                      },
                      "channelsData": {
                        "SMS": {
                          "message": "Your insurance claim summary is available"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_an_SMS_message."
                },
                "Sends a WhatsApp notification.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Whats App",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "WhatsApp",
                          "outputModule": "WhatsApp",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "contactInfo": {
                          "phone": "+420123456789"
                        }
                      },
                      "channelsData": {
                        "WhatsApp": {
                          "message": "Hello. Your insurance claim summary is available",
                          "fromNumber": "+420000000000"
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Sends_a_WhatsApp_notification."
                },
                "Merges TNO files.": {
                  "description": "",
                  "value": {
                    "steps": [
                      {
                        "name": "Print first TNO",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsurance.wfd",
                          "channel": "Print",
                          "outputType": "InspireNativeIntermediate",
                          "outputModule": "Print",
                          "outputPath": "blob://tno files/file1.tno",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Print second TNO",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/HomeInsuranceV2.wfd",
                          "channel": "Print",
                          "outputType": "InspireNativeIntermediate",
                          "outputPath": "blob://tno files/file2.tno",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "request://"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Merge TNO files",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/DocumentsMerge.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputModule": "Print",
                          "outputPath": "response://",
                          "customParameters": [
                            {
                              "name": "documentsDirectoryParamInput",
                              "value": "blob://tno files"
                            }
                          ]
                        }
                      }
                    ],
                    "data": {
                      "customer": {
                        "applicationId": "1234567",
                        "clientId": "abcd1234",
                        "contactInfo": {
                          "name": "John",
                          "surname": "Smith",
                          "phone": "+420123456789",
                          "email": "john.smith@gfbank.com"
                        },
                        "incident": {
                          "typeofLoss": "Roof damage",
                          "summary": "Roof damaged by thunderstorm",
                          "description": "Broken roofing, water leakage in the house",
                          "estimatedLoss": 10000,
                          "date": "2020-05-20T22:00",
                          "time": "2022-10-02T05:00",
                          "location": {
                            "Street": "57 Canterbury Ave.",
                            "City": "Englewood",
                            "ZipCode": "NJ 07631"
                          }
                        }
                      }
                    }
                  },
                  "x-internal-id": "onDemandDocument-Merges_TNO_files."
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "json": {
                    "type": "string",
                    "description": "File containing JSON parameters in a format identical to the application/json version of the request. The maximum size of this file is 100 kB.",
                    "format": "binary"
                  },
                  "dataFile1...dataFileX": {
                    "type": "string",
                    "description": "Individual data files containing input data. By default, the files are saved to an internal location and are automatically deleted once used.\n\nThe Content-Disposition header must contain the filename parameter as this is the value used to reference the files (the value of the name parameter is not used in further processing).\nTo reference a data file, use the request:// connector in the following format: request://\\<filename>, e.g. request://Customers.json.\nNote that using request:// without specifying the file name references the first uploaded data file (i.e. this is useful when uploading only one file).\n\nYou can attach maximally 100 data files. The maximum size of each file is 50 MB and the maximum size of all data files is 100 MB.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorOnDemandPipelinePublicResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnDemandPipelinePublicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/onDemandWebhookCustomData/{WebhookToken}": {
      "post": {
        "tags": [
          "On-Demand Generation"
        ],
        "description": "Starts and processes an on-demand job (using a defined processing pipeline) and uploads custom data to an internal location (these data files are later automatically deleted).",
        "parameters": [
          {
            "name": "variables",
            "in": "header",
            "description": "List of pipeline variables used for the job. Each variable should be a separate header with the name prefixed by \"c-variable-\", e.g. \"c-variable-subject\" with the value of \"Invitation to Apply for a Credit Card\" will create a variable \"subject\" with this value. The maximum number of these variables is 50 or as allowed by the maximum size of headers.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "header",
            "description": "Gives a custom name to the data file.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "header",
            "description": "Data file is saved to the specified folder in the working folder | input directory.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useDraftPipeline",
            "in": "header",
            "description": "If true, the job will be run using a draft version of the processing pipeline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useDraftResources",
            "in": "header",
            "description": "If true, the job will be run using a draft version of the relevant resources (scripts, connectors).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebhookToken",
            "in": "path",
            "description": "Unique pipeline webhook token.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorOnDemandPipelinePublicResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnDemandPipelinePublicResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "WebhookToken",
          "in": "path",
          "description": "Unique pipeline webhook token.",
          "required": true,
          "schema": {
            "minLength": 1,
            "type": "string"
          }
        }
      ]
    },
    "/production/v6/createOrUpdateProcessingPipeline": {
      "post": {
        "tags": [
          "Processing Pipelines"
        ],
        "description": "Creates or updates a processing pipeline.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - Write. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateBatchJobProcessingPipelineV6Request"
              },
              "examples": {
                "Creates a processing pipeline (Print, PDF) assigning an existing working folder.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "workingFolderId": "2021-07-28-hf3-1001",
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_Print_PDF_assigning_an_existing_working_folder."
                },
                "Creates a processing pipeline (Print, PDF) with specified data input.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_Print_PDF_with_specified_data_input."
                },
                "Creates a processing pipeline (Print, PDF) with the step failure notification enabled.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "steps": [
                      {
                        "name": "Print",
                        "failureNotificationEnabled": true,
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_Print_PDF_with_the_step_failure_notification_enabled."
                },
                "Creates a processing pipeline (Print, PDF) with custom variables.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "steps": [
                      {
                        "name": "Print",
                        "failureNotificationEnabled": true,
                        "generate": {
                          "template": "icm://Sample Solutions/${pipeline.myTemplate}",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "variables": [
                      {
                        "codeName": "myTemplate",
                        "value": "Templates/LifeInsuranceQuotes.wfd"
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_Print_PDF_with_custom_variables."
                },
                "Creates a processing pipeline (Print, PDF) with triggers.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "triggers": {
                      "hotFolderTrigger": {
                        "hotFolderPath": "Data",
                        "okFile": "data.csv.ok",
                        "isEnabled": true
                      },
                      "timeTrigger": {
                        "cronExpressions": [
                          {
                            "expression": "0 0 0 * * ? *"
                          }
                        ],
                        "isEnabled": true
                      },
                      "hitTrigger": {
                        "hitsToRun": 10,
                        "isEnabled": true
                      }
                    },
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_Print_PDF_with_triggers."
                },
                "Updates an existing processing pipeline.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Updates_an_existing_processing_pipeline."
                },
                "Creates a two-step processing pipeline that generates and sends email attachments.": {
                  "value": {
                    "pipelineName": "Print PDF attachments and send emails",
                    "steps": [
                      {
                        "name": "Prepare attachments",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g%h[33].pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Send emails",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Email",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/EmailBatch.job",
                          "outputModule": "Email",
                          "attachments": [
                            {
                              "attachmentName": "Attachment.pdf",
                              "path": "job://Output Folder/Attachments/Attachment_<g<h[33].pdf"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_two-step_processing_pipeline_that_generates_and_sends_email_attachments."
                },
                "Creates a two-step processing pipeline that generates and sends email attachments (with variables).": {
                  "value": {
                    "pipelineName": "Print PDF attachments and send emails",
                    "steps": [
                      {
                        "name": "Prepare attachments",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_${system.emailAttachmentsFilePattern}.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Send emails",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Email",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/EmailBatch.job",
                          "outputModule": "Email",
                          "attachments": [
                            {
                              "attachmentName": "Attachment.pdf",
                              "path": "job://Output Folder/Attachments/Attachment_${system.emailAttachmentsFilePattern}.pdf"
                            }
                          ],
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_two-step_processing_pipeline_that_generates_and_sends_email_attachments_with_variables_."
                },
                "Creates a processing pipeline that generates PDF attachments using a Content Author template.": {
                  "value": {
                    "pipelineName": "Print PDF email attachments from CA template",
                    "steps": [
                      {
                        "name": "Print attachments",
                        "generate": {
                          "template": "icm:S:Production:S:UserResource//Interactive/StandardPackage/Templates/Letterhead with address.jld",
                          "channel": "Print",
                          "outputType": "PDF",
                          "generateType": "ContentAuthor",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g%h[33].pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Interactive/StandardPackage/Data/Starter Data_DataInputs/InputFileJSON_1.json"
                            }
                          ]
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_that_generates_PDF_attachments_using_a_Content_Author_template."
                },
                "Creates a processing pipeline that generates PDF attachments using a Content Author template (with variables).": {
                  "value": {
                    "pipelineName": "Print PDF email attachments from CA template",
                    "steps": [
                      {
                        "name": "Print attachments",
                        "generate": {
                          "template": "icm:S:Production:S:UserResource//Interactive/StandardPackage/Templates/Letterhead with address.jld",
                          "channel": "Print",
                          "outputType": "PDF",
                          "generateType": "ContentAuthor",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_${system.emailAttachmentsFilePattern}.pdf",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Interactive/StandardPackage/Data/Starter Data_DataInputs/InputFileJSON_1.json"
                            }
                          ]
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_that_generates_PDF_attachments_using_a_Content_Author_template_with_variables_."
                },
                "Creates a processing pipeline that validates data > generates an Inspire Native file > generates PDF files.": {
                  "value": {
                    "pipelineName": "Data validation to Inspire Native to PDF",
                    "steps": [
                      {
                        "name": "Data validation",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/Validation.wfd",
                          "channel": "Print",
                          "outputType": "Validation",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Generate Inspire Native",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "InspireNativeIntermediate",
                          "outputPath": "job://Output Folder/Inspire Native/LifeInsuranceQuotes.tno",
                          "inputPaths": [
                            {
                              "name": "DataInput",
                              "path": "icm://Sample Solutions/Data/LifeInsuranceQuotes_customer.xml"
                            }
                          ]
                        }
                      },
                      {
                        "name": "Generate PDF",
                        "generate": {
                          "template": "job://Output Folder/Inspire Native/LifeInsuranceQuotes.tno",
                          "channel": "Print",
                          "outputType": "PDF",
                          "outputPath": "job://Output Folder/PDF/LifeInsuranceQuotes.pdf"
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_that_validates_data_generates_an_Inspire_Native_file_generates_PDF_files."
                },
                "Creates a processing pipeline with a module step.": {
                  "value": {
                    "pipelineName": "Pipeline with module",
                    "steps": [
                      {
                        "name": "Module step",
                        "module": {
                          "modulePath": "Custom Modules/Category/Script step",
                          "inputParameters": [
                            {
                              "parameterId": "inputId",
                              "value": "ParameterValue"
                            }
                          ],
                          "outputParametersMapping": [
                            {
                              "outputParameterId": "outputId",
                              "variable": "${pipeline.Variable}"
                            }
                          ]
                        }
                      }
                    ],
                    "variables": [
                      {
                        "codeName": "Variable",
                        "value": "DefaultParameterValue"
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_processing_pipeline_with_a_module_step."
                },
                "Creates a draft version of a processing pipeline.": {
                  "value": {
                    "pipelineName": "Pipeline",
                    "triggers": {
                      "hotFolderTrigger": {
                        "hotFolderPath": "Data",
                        "okFile": "data.csv.ok",
                        "isEnabled": true
                      },
                      "timeTrigger": {
                        "cronExpressions": [
                          {
                            "expression": "0 0 0 * * ? *"
                          }
                        ],
                        "isEnabled": true
                      },
                      "hitTrigger": {
                        "hitsToRun": 10,
                        "isEnabled": true
                      }
                    },
                    "steps": [
                      {
                        "name": "Print",
                        "generate": {
                          "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                          "channel": "Print",
                          "outputType": "PDF",
                          "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                          "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                        }
                      }
                    ],
                    "createWorkingFolder": true,
                    "isDraft": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_draft_version_of_a_processing_pipeline."
                },
                "Creates a conditional processing pipeline (switch).": {
                  "value": {
                    "pipelineName": "Switch pipeline",
                    "steps": [
                      {
                        "name": "Switch",
                        "failureNotificationEnabled": true,
                        "switch": {
                          "conditionValue": "${pipeline.myConditionValue}",
                          "matchMode": "First",
                          "cases": [
                            {
                              "case": "badValue",
                              "steps": [
                                {
                                  "name": "Email",
                                  "failureNotificationEnabled": true,
                                  "generate": {
                                    "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                                    "channel": "Email",
                                    "productionConfiguration": "icm://Sample Solutions/Production Configuration/EmailBatch.job",
                                    "outputModule": "Email"
                                  }
                                }
                              ]
                            },
                            {
                              "case": "myExpectedValue",
                              "steps": [
                                {
                                  "name": "Print",
                                  "failureNotificationEnabled": true,
                                  "generate": {
                                    "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                                    "channel": "Print",
                                    "outputType": "PDF",
                                    "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                                    "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                                  }
                                }
                              ]
                            }
                          ],
                          "elseSteps": [
                            {
                              "name": "Else Print",
                              "failureNotificationEnabled": true,
                              "generate": {
                                "template": "icm://Sample Solutions/Templates/LifeInsuranceQuotes.wfd",
                                "channel": "Print",
                                "outputType": "PDF",
                                "productionConfiguration": "icm://Sample Solutions/Production Configuration/PrintBatch.job",
                                "outputPath": "job://Output Folder/Attachments/Attachment_%g.pdf"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "variables": [
                      {
                        "codeName": "myConditionValue",
                        "value": "myExpectedValue"
                      }
                    ],
                    "createWorkingFolder": true,
                    "hasTriggersActive": true,
                    "priority": 50
                  },
                  "x-internal-id": "createOrUpdateProcessingPipeline-Creates_a_conditional_processing_pipeline_switch_."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrUpdateBatchJobProcessingPipelineResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/deleteProcessingPipeline": {
      "post": {
        "tags": [
          "Processing Pipelines"
        ],
        "description": "Deletes the specified processing pipeline.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - Write. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBatchJobProcessingPipelineRequest"
              },
              "examples": {
                "Deletes a processing pipeline.": {
                  "value": {
                    "pipelineName": "PipelineName"
                  },
                  "x-internal-id": "deleteProcessingPipeline-Deletes_a_processing_pipeline."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OKResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/deleteProcessingPipelineVersion": {
      "post": {
        "tags": [
          "Processing Pipelines"
        ],
        "description": "Deletes the specified version of the processing pipeline.\n Note that you cannot delete the current production version or the last existing version of the pipeline.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - Write. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProcessingPipelineVersionRequest"
              },
              "examples": {
                "Deletes a specific version of a processing pipeline.": {
                  "value": {
                    "pipelineName": "PipelineName",
                    "pipelineVersion": 1
                  },
                  "x-internal-id": "deleteProcessingPipelineVersion-Deletes_a_specific_version_of_a_processing_pipeline."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OKResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/listProcessingPipelines": {
      "post": {
        "tags": [
          "Processing Pipelines"
        ],
        "description": "Lists all processing pipelines with their details.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - View. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProcessingPipelinesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/production/v6/renameProcessingPipeline": {
      "post": {
        "tags": [
          "Processing Pipelines"
        ],
        "description": "Renames the specified processing pipeline.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authenticating your request. You need to generate an API key for a user role with relevant permissions in Settings | Aministration | API Keys and use it as a Bearer token. Permission: Content management - Write. Example: Bearer ox6933/jZ29ZXqS22V0vNk1zaM9l6sqRHD5W3LMb3tLu.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameProcessingPipelineRequest"
              },
              "examples": {
                "Renames a processing pipeline.": {
                  "value": {
                    "pipelineName": "PipelineName",
                    "newPipelineName": "NewPipelineName"
                  },
                  "x-internal-id": "renameProcessingPipeline-Renames_a_processing_pipeline."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenameProcessingPipelineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateChangeSetV6Request": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Name of the change set."
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\f\\b\\u0000]*$",
            "type": "string",
            "description": "Description of the change set."
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDto"
            },
            "description": "List of resources."
          }
        }
      },
      "ResourceDto": {
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The Path parameter points to a single object in the root (e.g. \"Connectors/connectorName\") or in the specified folder (e.g. \"Connectors/folderA/connectorName\"). \n The first part of the path changes based on the resource's type: connectors - \"Connectors/\"; pipelines - \"Pipelines/'; custom modules - \"Custom Modules/\"; ICM files - \"icm://\".\n The path can also point to all contents of a folder. For example, \"Connectors/folderA/\" adds all connectors located in the \"folderA\" folder."
          },
          "withDependencies": {
            "type": "boolean",
            "description": "A flag that adds all of the resource's dependencies to the change set package. For example, a pipeline can have a template file and a connector as its dependencies."
          }
        }
      },
      "CreateChangeSetResponse": {
        "type": "object",
        "properties": {
          "changeSetId": {
            "type": "string",
            "description": "Unique identifier of the change set."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "Message describing the issue."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about errors."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "CreateOrUpdateBatchJobProcessingPipelineV6Request": {
        "required": [
          "pipelineName",
          "steps"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",
            "type": "string",
            "description": "Unique name identifying the processing pipeline (including the complete path if the pipeline is in a folder). If a pipeline with this name does not exist at the specified path, a new pipeline with this name is created (including its parent folders, if required)."
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\f\\b\\u0000]*$",
            "type": "string",
            "description": "Custom description."
          },
          "triggers": {
            "$ref": "#/components/schemas/TriggersDto"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "List of processing pipeline steps."
          },
          "onErrorSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "List of processing pipeline steps that will be processed in case an error occurs.\n On execution of this parameter, a log containing errors/warnings is created in the following location: blob://.error.log."
          },
          "variables": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchVariableEnterpriseWithRequiredDto"
            },
            "description": "List of processing pipeline variables."
          },
          "workingFolderId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of an existing job working folder.\n Note that assigning existing working folders is currently not supported for on-demand mode. This means that if you assign a working folder (you have created in the GUI) and then start the pipeline in on-demand mode, this setting will be ignored and a new on-demand working folder will be created instead (share://ondemand/JobID)."
          },
          "createWorkingFolder": {
            "type": "boolean",
            "description": "If true, a new job working folder will be created for the batch.\n Note that the request cannot have both the createWorkingFolder and workingFolderId parameters defined at the same time. If both are defined, the request will fail."
          },
          "isDraft": {
            "type": "boolean",
            "description": "If true, the processing pipeline will be in a draft state (false by default). If set as true for a pipeline that already has a draft, the existing draft will be overwritten."
          },
          "hasTriggersActive": {
            "type": "boolean",
            "description": "Specifies whether triggers can be used with this pipeline or not. If set to false, triggers are inactive, even if they are configured for the pipeline. Setting this option to off does not remove trigger configuration. This property is always active by default. If you need to disable triggers (e.g. for testing), set it to false."
          },
          "versionComment": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Specifies a comment for the production version of the pipeline."
          },
          "timeouts": {
            "$ref": "#/components/schemas/PipelineEnterpriseTimeoutsDto"
          },
          "jobNotPerformedNotification": {
            "$ref": "#/components/schemas/JobNotPerformedNotificationPublicApiRequestDto"
          },
          "requiredRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Roles that are used in the job and are required to publish the pipeline."
          },
          "authorizedRoles": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Only users with at least one of the following roles can execute the pipeline."
          },
          "priority": {
            "maximum": 99,
            "minimum": 1,
            "type": "integer",
            "description": "Specifies the default job priority.",
            "nullable": true
          }
        }
      },
      "TriggersDto": {
        "type": "object",
        "properties": {
          "hotFolderTrigger": {
            "$ref": "#/components/schemas/HotFolderTriggerRequestDto"
          },
          "timeTrigger": {
            "$ref": "#/components/schemas/TimeTriggerRequestDto"
          },
          "hitTrigger": {
            "$ref": "#/components/schemas/HitTriggerRequestDto"
          }
        },
        "description": "List of pipeline triggers that automatically start a new job when defined conditions are met."
      },
      "HotFolderTriggerRequestDto": {
        "type": "object",
        "properties": {
          "hotFolderPath": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Path to a subfolder within the hot folder in the dedicated Azure Blob Storage. If left empty, the root share://hotfolder folder is used."
          },
          "okFile": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b\\u0000 \\\\/:\\\"<>|]+([ ]+[^ \\\\/:\\\"<>|]+)*\\z",
            "type": "string",
            "description": "Name of the file that functions as the pipeline trigger. The file must share its name with the relevant data file, e.g. customersMetadata.csv.ok. If you want your pipeline to use various data files with different formats and names, you can use masking characters."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "This parameter specifies whether the trigger is active."
          }
        },
        "description": "Configures the Hot Folder trigger. It triggers a processing pipeline when a data file and an OK file is uploaded to the hot folder within your dedicated Azure Blob Storage."
      },
      "TimeTriggerRequestDto": {
        "type": "object",
        "properties": {
          "cronExpressions": {
            "maximum": 5,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CronExpressionDto"
            },
            "description": "List of cron expressions defining the times at which the pipeline will be triggered."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "This parameter specifies whether the trigger is active."
          }
        },
        "description": "Configures the Time Trigger. You can schedule the processing pipeline to be triggered periodically at fixed times, dates, or intervals by using cron expressions."
      },
      "CronExpressionDto": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "description": "Custom cron expression, e.g. 0 0/5 * * * ? * will trigger the pipeline every 5 minutes."
          }
        }
      },
      "HitTriggerRequestDto": {
        "type": "object",
        "properties": {
          "hitsToRun": {
            "maximum": 9007199254740991,
            "minimum": 1,
            "type": "integer",
            "description": "Number of hits that have to be made for the job to be triggered.",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "This parameter specifies whether the trigger is active."
          }
        },
        "description": "Configures the Hit Trigger. Calling the increaseHitCount API service increases the hit count; the pipeline will be triggered when the set number of hits is reached."
      },
      "StepEnterpriseV6Dto": {
        "required": [
          "name"
        ],
        "type": "object",
        "oneOf": [
          {
            "properties": {
              "Generate": {
                "$ref": "#/components/schemas/GenerateStepEnterpriseDto"
              }
            }
          },
          {
            "properties": {
              "Switch": {
                "$ref": "#/components/schemas/SwitchStepEnterpriseV6Dto"
              }
            }
          },
          {
            "properties": {
              "Module": {
                "$ref": "#/components/schemas/ModuleStepEnterpriseV6Dto"
              }
            }
          }
        ],
        "properties": {
          "name": {
            "maxLength": 55,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Name of the step."
          },
          "failureNotificationEnabled": {
            "type": "boolean",
            "description": "If true, an additional notification is sent if the given step has failed. It is useful if you want to monitor the specific step. The notification delivery is configured in the Notifications section.\n Currently it is not supported for on-demand mode."
          },
          "timeouts": {
            "$ref": "#/components/schemas/StepEnterpriseTimeoutsDto"
          },
          "continueOnFailure": {
            "type": "boolean",
            "description": "If true, the pipeline will continue to be processed even if the step has failed. If false, the job will fail or (if defined) the onErrorSteps will be processed.",
            "nullable": true
          }
        }
      },
      "GenerateStepEnterpriseDto": {
        "required": [
          "template",
          "channel"
        ],
        "type": "object",
        "properties": {
          "template": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Path to the template used to generate documents."
          },
          "channel": {
            "enum": [
              "Print",
              "Messenger",
              "Email",
              "MessengerSMS",
              "SMS",
              "MessengerWhatsApp",
              "WhatsApp",
              "PushNotification",
              "DigitalAdvantageContent",
              "Digital"
            ],
            "type": "string",
            "description": "Output channel defining the format and means of document delivery."
          },
          "outputType": {
            "enum": [
              "PDF",
              "AFP",
              "InspireNative",
              "AdobePostScript2",
              "AdobePostScript3",
              "DynamicCommunications",
              "EPS",
              "TIFF",
              "PNG",
              "JPG",
              "MTIFF",
              "XML",
              "JSON",
              "CSV",
              "FLAT",
              "Validation",
              "SimpleHTML",
              "Text",
              "PDFFix",
              "DOCX",
              "XLSX",
              "InspireNativeIntermediate",
              "InspireNativeFinalProduction"
            ],
            "type": "string",
            "description": "File type of the generated document. The value is mandatory for print steps."
          },
          "generateType": {
            "enum": [
              "InspireDesigner",
              "ContentAuthor"
            ],
            "type": "string",
            "description": "Type of the Generate step. Set it based on the origin of the used template (Inspire Designer or Content Author). By default, it is InspireDesigner."
          },
          "productionConfiguration": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Path to the production configuration file used to generate the documents."
          },
          "outputModule": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Name of the output module."
          },
          "outputPath": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Location where the output will be stored."
          },
          "attachments": {
            "maximum": 10,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchStepAttachmentRelativePathDto"
            },
            "description": "List of attachments."
          },
          "customAttachments": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "description": "Specifies custom attachments from a Front Office ticket and attaches them to the email. For this feature to be functional, you must specify the ${system.attachments} system variable."
          },
          "inputPaths": {
            "maximum": 10,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedPathDto"
            },
            "description": "List of input data definitions."
          },
          "customParameters": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductionBatchCustomParameterDto"
            },
            "description": "Defines values that are to be passed to individual parameters within the ParamInput module."
          },
          "correlationId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Correlation identifier used to mark batches so their status can easily be checked later. Use of variables is supported."
          },
          "communicationIdStrategy": {
            "enum": [
              "Append",
              "Override",
              "None",
              "OverrideWithCustomValue"
            ],
            "type": "string",
            "description": "Defines strategy used for applying correlation ID to the batch name field.\n OverrideWithCustomValue is the default value where the correlation ID has priority; None does not manipulate the communication ID (i.e. settings within the template are applied); Append combines the template's settings with the correlation ID; Override substitutes the template's settings with the correlation ID."
          },
          "metadataPath": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Saves a sheet name metadata file to the specified path (following the storage scheme). The file is in the JSON format and can be used to aid integration with external systems (e.g. DocuSign)."
          },
          "errorRecovery": {
            "$ref": "#/components/schemas/ErrorRecoveryEnterpriseDto"
          },
          "digitalServicesSettings": {
            "$ref": "#/components/schemas/DigitalServicesSettingsEnterpriseDto"
          }
        },
        "description": "Step configuration used to generate documents. The parameters mirror the options in the processing-pipeline editor."
      },
      "BatchStepAttachmentRelativePathDto": {
        "required": [
          "attachmentName"
        ],
        "type": "object",
        "properties": {
          "attachmentName": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Attachment will be renamed to the specified value."
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\">|]+([ ]+[^ :*?\">|]+)*$",
            "type": "string",
            "description": "Path to the static attachment file."
          }
        }
      },
      "NamedPathDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Name of the data input. It must match the name of the template's data input module. For example, DataInput for Content Author templates."
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Path to the data input file."
          }
        }
      },
      "ProductionBatchCustomParameterDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the parameter within the ParamInput module to which the value will be passed. The value must have the following format: <ParameterName><ParamInputModuleName>, e.g. greetingsParamInput1."
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Specifies the value that will be passed to the specified parameter."
          }
        }
      },
      "ErrorRecoveryEnterpriseDto": {
        "type": "object",
        "properties": {
          "configuration": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Specifies the path to a configuration file containing the error recovery settings. It is a Warning Preferences File (WPR) that can be configured and retrieved from Inspire Designer."
          },
          "errorIndex": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Specifies the path where an error index file will be created. This file contains a list of indexes referencing the records that could not be processed."
          },
          "layoutName": {
            "type": "string",
            "description": "Name of the template's Layout module the error recovery settings will be applied to.\n When using a Content Author template, do not define this parameter.This is because these templates always have only one Layout module."
          }
        },
        "description": "Lists error recovery options. These manage how individual errors are treated and list them in an external file."
      },
      "DigitalServicesSettingsEnterpriseDto": {
        "required": [
          "applicationId",
          "documentName"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "maximum": 9007199254740991,
            "minimum": 1,
            "type": "integer",
            "description": "ID of the DAS application."
          },
          "clientId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "ID of the user within the DAS application."
          },
          "documentName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name of the document that will be displayed in the DAS application."
          }
        },
        "description": "Specifies the required properties (clientId, documentName, and ApplicationId) for uploading digital content to the DAS application."
      },
      "SwitchStepEnterpriseV6Dto": {
        "required": [
          "matchMode",
          "cases"
        ],
        "type": "object",
        "properties": {
          "conditionValue": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Condition that will be evaluated against all case parameters."
          },
          "conditionOperator": {
            "enum": [
              "Equals",
              "NotEquals"
            ],
            "type": "string",
            "description": "The operator used in conditions to compare whether two values are the same or different."
          },
          "matchMode": {
            "enum": [
              "First",
              "All"
            ],
            "type": "string",
            "description": "Specifies the way matching condition values are evaluated. First - only the first case matching the condition will be processed; All - all cases matching the condition will be processed in a sequence."
          },
          "cases": {
            "maximum": 3,
            "minimum": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwitchStepCaseEnterpriseV6Dto"
            },
            "description": "Defines cases that will be executed if the defined conditions are met."
          },
          "elseSteps": {
            "maximum": 128,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "Configures steps that will be executed if no condition is met."
          }
        },
        "description": "Step configuration that allows you to define conditional generation. There can be up to 5 levels of nested Switch parameters."
      },
      "SwitchStepCaseEnterpriseV6Dto": {
        "type": "object",
        "properties": {
          "conditionValue": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Condition that will be evaluated against the correlated case parameter. It overrides the default condition value."
          },
          "conditionOperator": {
            "enum": [
              "Equals",
              "NotEquals"
            ],
            "type": "string",
            "description": "The operator used in conditions to compare whether two values are the same or different."
          },
          "case": {
            "maxLength": 255,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"<>|]+([ ]+[^ :*?\"<>|]+)*$",
            "type": "string",
            "description": "Defines a case statement. If it matches the conditionValue, the correlated steps will be executed."
          },
          "steps": {
            "maximum": 128,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "List of processing pipeline steps that will be processed if the case matches the conditionValue."
          }
        }
      },
      "ModuleStepEnterpriseV6Dto": {
        "required": [
          "modulePath"
        ],
        "type": "object",
        "properties": {
          "modulePath": {
            "type": "string",
            "description": "Path to the module, consisting of the root folder, any optional module folders, and the name of the module, i.e. \"\\<root folder\\>/\\<folder\\>/\\<name\\>\" or \"\\<root folder\\>/\\<name\\>\".\n Use the \"Custom Modules\" root folder for custom modules and \"Public Modules\" root folder for pre-prepared modules. For example: \"Custom Modules/Data/Download Source File\", \"Custom Modules/Json to XML\", \"Public Modules/Utilities/Resource Copy\"."
          },
          "approvedCapabilities": {
            "maximum": 20,
            "minimum": 0,
            "type": "array",
            "items": {
              "enum": [
                "Eval"
              ],
              "type": "string"
            },
            "description": "Specifies the capabilities that are approved to be used by the module."
          },
          "inputParameters": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleStepParameterV6Dto"
            },
            "description": "Specifies the module's input parameters."
          },
          "outputParametersMapping": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputParameterMappingDto"
            },
            "description": "Maps the module's output parameters to variables."
          }
        },
        "description": "Step configuration used for modules."
      },
      "ModuleStepParameterV6Dto": {
        "required": [
          "parameterId"
        ],
        "type": "object",
        "properties": {
          "parameterId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Identifier of the module parameter (\"id\" parameter defined in the \"getDescription()\" function)."
          },
          "value": {
            "type": "string",
            "description": "Value of the module parameter. It can contain variables."
          }
        }
      },
      "OutputParameterMappingDto": {
        "required": [
          "outputParameterId",
          "variable"
        ],
        "type": "object",
        "properties": {
          "outputParameterId": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Unique identifier of the module output parameter to be mapped."
          },
          "variable": {
            "maxLength": 55,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Code name of the variable including the \"pipeline\" prefix (the only currently supported variable type), e.g. ${pipeline.myVariable}."
          }
        }
      },
      "StepEnterpriseTimeoutsDto": {
        "type": "object",
        "properties": {
          "customTimeoutEnabled": {
            "type": "boolean",
            "description": "If true, enables custom timeout for the step."
          },
          "batchProcessingTimeoutMilliseconds": {
            "maximum": 21600000,
            "minimum": 0,
            "type": "integer",
            "description": "Timeout for batch processing.",
            "nullable": true
          },
          "onDemandProcessingTimeoutMilliseconds": {
            "maximum": 90000,
            "minimum": 0,
            "type": "integer",
            "description": "Timeout for on-demand processing.",
            "nullable": true
          }
        },
        "description": "Sets timeouts for the processing of a step."
      },
      "BatchVariableEnterpriseWithRequiredDto": {
        "required": [
          "codeName",
          "value"
        ],
        "type": "object",
        "properties": {
          "isRequired": {
            "type": "boolean",
            "description": "If true, the variable must contain a value."
          },
          "codeName": {
            "maxLength": 55,
            "minLength": 1,
            "pattern": "^[^;#@*?:/\\~()\\\\|\"]+$",
            "type": "string",
            "description": "Code name of the variable. When using the variable, use this value prefixed by \"pipeline\", \"global\", or \"system\" (depending on its type), e.g. ${pipeline.myVariable}."
          },
          "value": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"]+([ ]+[^ *?\"<]+)*$",
            "type": "string",
            "description": "Value of the variable. It will be used when the pipeline is started."
          },
          "options": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of all values accepted by the variable."
          }
        }
      },
      "PipelineEnterpriseTimeoutsDto": {
        "type": "object",
        "properties": {
          "batchProcessingTimeoutMilliseconds": {
            "maximum": 43200000,
            "minimum": 0,
            "type": "integer",
            "description": "Timeout for a batch processing.",
            "nullable": true
          },
          "onDemandProcessingTimeoutMilliseconds": {
            "maximum": 90000,
            "minimum": 0,
            "type": "integer",
            "description": "Timeout for on-demand processing.",
            "nullable": true
          }
        },
        "description": "Sets timeouts for the processing of a pipeline."
      },
      "JobNotPerformedNotificationPublicApiRequestDto": {
        "type": "object",
        "properties": {
          "cronExpression": {
            "type": "string",
            "description": "Defines a cron expression specifying the times at which the notification will be sent."
          }
        },
        "description": "Enables sending of notifications in case the job is not performed."
      },
      "CreateOrUpdateBatchJobProcessingPipelineResponse": {
        "type": "object",
        "properties": {
          "pipelineName": {
            "type": "string",
            "description": "Unique name identifying the processing pipeline."
          },
          "eventId": {
            "type": "integer",
            "description": "Unique event identifier."
          },
          "time": {
            "type": "string",
            "description": "Event creation time.",
            "format": "date-time"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "DeleteBatchJobProcessingPipelineRequest": {
        "required": [
          "pipelineName"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",
            "type": "string",
            "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\"."
          }
        }
      },
      "OKResponse": {
        "type": "object"
      },
      "DeleteProcessingPipelineVersionRequest": {
        "required": [
          "pipelineName",
          "pipelineVersion"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",
            "type": "string",
            "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\"."
          },
          "pipelineVersion": {
            "type": "integer",
            "description": "Number of the version."
          }
        }
      },
      "OnDemandPipelineAdHocV6Request": {
        "required": [
          "steps"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]*$",
            "type": "string",
            "description": "Name of the ad hoc pipeline (Ad Hoc Pipeline by default)."
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "List of processing pipeline steps."
          },
          "onErrorSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepEnterpriseV6Dto"
            },
            "description": "List of processing pipeline steps that will be processed in case an error occurs.\n On execution of this parameter, a log containing errors/warnings is created in the following location: blob://.error.log."
          },
          "variables": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchVariableWithTypeEnterpriseDto"
            },
            "description": "List of processing pipeline variables."
          },
          "processingTimeoutMilliseconds": {
            "maximum": 90000,
            "minimum": 0,
            "type": "integer",
            "description": "Global timeout for pipeline processing.",
            "nullable": true
          },
          "useDraftResources": {
            "type": "boolean",
            "description": "If true, the job will be run using a draft version of the relevant resources (scripts, connectors)."
          },
          "data": {
            "type": "object",
            "description": "Defines custom JSON data input right in the request body. It is expected that the name of the data input module is DataInput. The maximum size of the data is 10 kb."
          }
        }
      },
      "BatchVariableWithTypeEnterpriseDto": {
        "required": [
          "codeName",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Pipeline",
              "Global",
              "System",
              "Custom",
              "Step"
            ],
            "type": "string",
            "description": "Type of the variable (\"pipeline\" by default)."
          },
          "codeName": {
            "maxLength": 55,
            "minLength": 1,
            "pattern": "^[^;#@*?:/\\~()\\\\|\"]+$",
            "type": "string",
            "description": "Code name of the variable. When using the variable, use this value prefixed by \"pipeline\", \"global\", or \"system\" (depending on its type), e.g. ${pipeline.myVariable}."
          },
          "value": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[^ \\n\\r\\t\\f\\b *?\"]+([ ]+[^ *?\"<]+)*$",
            "type": "string",
            "description": "Value of the variable. It will be used when the pipeline is started."
          },
          "options": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of all values accepted by the variable."
          }
        }
      },
      "ErrorOnDemandPipelinePublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Job identifier.",
            "format": "guid",
            "nullable": true,
            "example": "0f8fad5b-d9cb-469f-a165-70867728950e"
          },
          "status": {
            "enum": [
              "Success",
              "Failed"
            ],
            "type": "string",
            "description": "Job status.",
            "example": "Failed"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about errors."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "OnDemandPipelinePublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Job identifier.",
            "format": "guid",
            "nullable": true,
            "example": "0f8fad5b-d9cb-469f-a165-70867728950e"
          },
          "status": {
            "enum": [
              "Success",
              "Failed"
            ],
            "type": "string",
            "description": "Job status."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "OnDemandPipelineCustomDataRequest": {
        "type": "object"
      },
      "OnDemandPipelineRequest": {
        "required": [
          "pipelineName"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",
            "type": "string",
            "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\"."
          },
          "variables": {
            "maximum": 50,
            "minimum": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchVariableWithTypeEnterpriseDto"
            },
            "description": "List of processing pipeline variables."
          },
          "useDraftPipeline": {
            "type": "boolean",
            "description": "If true, the job will be run using a draft version of the processing pipeline."
          },
          "useDraftResources": {
            "type": "boolean",
            "description": "If true, the job will be run using a draft version of the relevant resources (scripts, connectors)."
          }
        }
      },
      "OnDemandWebhookCustomDataRequest": {
        "type": "object"
      },
      "RenameProcessingPipelineRequest": {
        "required": [
          "pipelineName",
          "newPipelineName"
        ],
        "type": "object",
        "properties": {
          "pipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",

            "type": "string",
            "description": "Unique name of the processing pipeline. If the pipeline is inside a folder, this parameter must contain the whole path, e.g. PipelineName:\"Folder/NestedFolder/pipelineName\"."
          },
          "newPipelineName": {
            "maxLength": 279,
            "minLength": 1,
            "pattern": "^[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+(?:\\/[^\\t\\n\\f\\r\\b\\\\/\":*?<>|\\u0000]+)*$",
            "type": "string",
            "description": "New unique name identifying the processing pipeline (including the complete path, if the pipeline is in a folder). Changing the pipeline's path moves the pipeline to the new location. If any folders specified in the path do not exist, they are created."
          }
        }
      },
      "RenameProcessingPipelineResponse": {
        "type": "object",
        "properties": {
          "pipelineName": {
            "type": "string",
            "description": "Unique name identifying the processing pipeline."
          },
          "eventId": {
            "type": "integer",
            "description": "Unique event identifier."
          },
          "time": {
            "type": "string",
            "description": "Event creation time.",
            "format": "date-time"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "QueryAppHealth": {
        "type": "object",
        "properties": {
          "application": {
            "enum": [
              "GenerateOnDemand",
              "GenerateBatch"
            ],
            "type": "string",
            "description": "Specifies the application to be checked."
          }
        }
      },
      "ProdaasAppHealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Running",
              "NotRunning"
            ],
            "type": "string",
            "description": "The health status of the application."
          },
          "application": {
            "enum": [
              "GenerateOnDemand",
              "GenerateBatch"
            ],
            "type": "string",
            "description": "Application the status pertains to."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "QueryAppHealthV2": {
        "type": "object",
        "properties": {
          "application": {
            "enum": [
              "GenerateOnDemand",
              "GenerateBatch"
            ],
            "type": "string",
            "description": "Specifies the application to be checked."
          }
        }
      },
      "QueryBatchLog": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "ID of the job for which to retrieve the logs. Alternatively, you can use CorrelationId."
          },
          "correlationId": {
            "type": "string",
            "description": "Custom correlation ID used to identify the job. If it was specified for the job, you can use it instead of JobId."
          },
          "start": {
            "type": "string",
            "description": "The start of the interval in which to search for the logs (in ISO format).",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "description": "The end of the interval in which to search for the logs. The default value is 10 minutes; the maximum value is 7 days.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueryDashboardStatisticsRawData": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "description": "Starting date from which raw statistics data will be included (date/time format according to the ISO 8601 standard).",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "description": "Ending date from which raw statistics data will not be included (date/time format according to the ISO 8601 standard).",
            "format": "date-time"
          },
          "applicationFilter": {
            "enum": [
              "All",
              "OnDemand",
              "Batch"
            ],
            "type": "string",
            "description": "Filters data by application, i.e. use Batch to retrieve statistics for Generate Batch jobs, or use OnDemand for Generate On Demand job statistics. Use All to retrieve all data regardless of the application (if not defined, data from all applications is returned as well)."
          }
        }
      },
      "QueryDashboardStatisticsRawDataV2": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "description": "Starting date from which raw statistics data will be included (date/time format according to the ISO 8601 standard).",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "description": "Ending date from which raw statistics data will not be included (date/time format according to the ISO 8601 standard).",
            "format": "date-time"
          },
          "applicationFilter": {
            "enum": [
              "All",
              "OnDemand",
              "Batch"
            ],
            "type": "string",
            "description": "Filters data by application, i.e. use Batch to retrieve statistics for Generate Batch jobs, or use OnDemand for Generate On Demand job statistics. Use All to retrieve all data regardless of the application (if not defined, data from all applications is returned as well)."
          }
        }
      },
      "QueryJobLogExport": {
        "required": [
          "from"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "description": "Unix timestamp in nanoseconds from which job logs will be included.\n For subsequent requests, use the timestamp of the last returned line and add 1 nanoseconds (otherwise the log will contain a duplicate entry).\n The value can range between the present time up to one year in the past."
          },
          "lineLimit": {
            "type": "integer",
            "description": "Limits the number of job logs that will be returned. The maximum and default value is 10000.",
            "nullable": true
          },
          "application": {
            "enum": [
              "ONDEMAND",
              "BATCH",
              "ORCHESTRATION"
            ],
            "type": "string",
            "description": "Filters data by application type. By default, job logs from all applications are returned."
          }
        }
      },
      "QueryJobLogExportV2": {
        "required": [
          "from"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "description": "Unix timestamp in nanoseconds from which job logs will be included.\n For subsequent requests, use the timestamp of the last returned line and add 1 nanoseconds (otherwise the log will contain a duplicate entry)."
          },
          "lineLimit": {
            "type": "integer",
            "description": "Limits the number of job logs that will be returned. The maximum and default value is 10000.",
            "nullable": true
          },
          "application": {
            "enum": [
              "ONDEMAND",
              "BATCH"
            ],
            "type": "string",
            "description": "Filters data by application type. By default, job logs from all applications are returned."
          }
        }
      },
      "QueryListProcessingPipelines": {
        "type": "object"
      },
      "ListProcessingPipelinesResponse": {
        "type": "object",
        "properties": {
          "pipelines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingPipelineDto"
            },
            "description": "List of processing pipelines with their details."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "ProcessingPipelineDto": {
        "required": [
          "pipelineName"
        ],
        "type": "object",
        "properties": {
          "pipelineId": {
            "type": "integer",
            "description": "Unique numerical identifier of the processing pipeline."
          },
          "pipelineName": {
            "type": "string",
            "description": "Unique name of the processing pipeline."
          },
          "draftState": {
            "enum": [
              "NoDraft",
              "Invalid",
              "Valid",
              "Caution"
            ],
            "type": "string",
            "description": "Current state of the pipeline draft."
          },
          "lastProductionVersion": {
            "type": "integer",
            "description": "Number of the current production version. If no such version exists, its value is null.",
            "nullable": true
          },
          "pipelineType": {
            "enum": [
              "Generate",
              "OmnichannelAction",
              "OmnichannelCondition"
            ],
            "type": "string",
            "description": "Type of the pipeline."
          },
          "priority": {
            "type": "integer",
            "description": "Default job priority (configured in the pipeline).",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "description": "User name of the user who last updated the pipeline."
          },
          "lastUpdate": {
            "type": "string",
            "description": "Time of the last update.",
            "format": "date-time",
            "nullable": true
          },
          "triggerState": {
            "enum": [
              "NotSet",
              "Active",
              "Inactive"
            ],
            "type": "string",
            "description": "Current state of triggers."
          },
          "triggerTypes": {
            "type": "array",
            "items": {
              "enum": [
                "HitTrigger",
                "TimeTrigger",
                "HotFolderTrigger",
                "ListenerJob"
              ],
              "type": "string"
            },
            "description": "List of the triggers configured for the pipeline."
          },
          "lastRun": {
            "type": "string",
            "description": "The last time a job was run form this pipeline.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueryListProcessingPipelinesV3": {
        "type": "object"
      },
      "QueryOnDemandLog": {
        "required": [
          "start"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "ID of the job for which to retrieve the logs. Alternatively, you can use CorrelationId."
          },
          "correlationId": {
            "type": "string",
            "description": "Custom correlation ID used to identify the job. If it was specified for the job, you can use it instead of JobId."
          },
          "start": {
            "type": "string",
            "description": "The start of the interval in which to search for the logs (in ISO format).",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "description": "The end of the interval in which to search for the logs. The default value is 10 minutes; the maximum value is 7 days.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueryProductionAuditingFluentApi": {
        "required": [
          "cursor"
        ],
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "For the initial API call, define the date and time from which you want to list the data. For subsequent API calls, specify a unique string from the previous API response.\n For a list of the supported date/time formats, see the Evolve REST API Reference Guide documentation."
          },
          "maxCount": {
            "maximum": 5000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of records that should be returned."
          }
        }
      },
      "ProductionAuditingResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "Unique string that must be used in subsequent calls. Each cursor value is only valid for 24 hours."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "description": "List of production details."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Lists details about warnings."
          }
        }
      },
      "Object": {
        "type": "object"
      },
      "QueryProductionAuditingFluentApiV3": {
        "required": [
          "cursor"
        ],
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "For the initial API call, define the date and time from which you want to list the data. For subsequent API calls, specify a unique string from the previous API response.\n For a list of the supported date/time formats, see the Evolve REST API Reference Guide documentation."
          },
          "maxCount": {
            "maximum": 5000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of records that should be returned."
          }
        }
      },
      "QueryScenarioLogV6": {
        "required": [
          "jobId"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "ID of the scenario job for which to retrieve the logs."
          },
          "skipBatchLogs": {
            "type": "boolean",
            "description": "Specifies whether related batch job logs will be excluded from the results (false by default). If true, the results will include only scenario job logs."
          },
          "start": {
            "type": "string",
            "description": "The start of the interval in which to search for the logs (in ISO format).",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "description": "The end of the interval in which to search for the logs. The default value is 1 hour; the maximum value is 90 days.",
            "format": "date-time",
            "nullable": true
          }
        }
      }
    }
  }
}